openapi: 3.0.1
info:
  title: "Cosmoscan API"
  description: 'Global errors: <ul><li>{"error" : "bad_request", "msg": ""} - invalid request from client (Status code:400) </li><li> {"error" : "service_error"} - error on the service side (Status code:500)</li></ul>'
  version: 1.0.0
tags:
  - name: Services
paths:
  /meta:
    get:
      tags:
        - Services
      summary: Meta information
      responses:
        200:
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                properties:
                  height:
                    type: string
                  latest_validator:
                    type: string
                  latest_proposal:
                    type: string
                  validator_avg_fee:
                    type: number
                  block_time:
                    type: number
                  current_price:
                    type: number
                example:
                  height: 500
                  latest_validator: "Everstake"
                  latest_proposal: "Free transactions"
                  validator_avg_fee: "10"
                  block_time: 6.7
                  current_price: "3.2"
  /historical-state:
    get:
      tags:
        - Services
      summary: Get historical state
      responses:
        200:
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                properties:
                  current:
                    type: object
                    properties:
                      price:
                        type: number
                      market_cap:
                        type: number
                      circulating_supply:
                        type: number
                      trading_volume:
                        type: number
                      staked_ratio:
                        type: number
                      transactions_count:
                        type: number
                      community_pool:
                        type: number
                      top20_weight:
                        type: number
                      created_at:
                        type: number
                  price_agg:
                    $ref: '#/components/schemas/agg_item'
                  market_cap_agg:
                    $ref: '#/components/schemas/agg_item'
                  staked_ratio:
                    $ref: '#/components/schemas/agg_item'
  /transactions/fee/agg:
    get:
      tags:
        - Services
      parameters:
        - name: by
          in: query
          required: true
          schema:
            type: string
            enum: [hour, day, week, month]
        - name: from
          in: query
          required: false
          schema:
            type: number
          description: timestamp in seconds
        - name: to
          in: query
          required: false
          schema:
            type: number
          description: timestamp in seconds
      summary: Get aggregeted fee
      responses:
        200:
          description: "Success"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/agg_item'
  /transfers/volume/agg:
    get:
      tags:
        - Services
      parameters:
        - name: by
          in: query
          required: true
          schema:
            type: string
            enum: [hour, day, week, month]
        - name: from
          in: query
          required: false
          schema:
            type: number
          description: timestamp in seconds
        - name: to
          in: query
          required: false
          schema:
            type: number
          description: timestamp in seconds
      summary: Get aggregeted transfers volume
      responses:
        200:
          description: "Success"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/agg_item'
  /operations/count/agg:
    get:
      tags:
        - Services
      parameters:
        - name: by
          in: query
          required: true
          schema:
            type: string
            enum: [hour, day, week, month]
        - name: from
          in: query
          required: false
          schema:
            type: number
          description: timestamp in seconds
        - name: to
          in: query
          required: false
          schema:
            type: number
          description: timestamp in seconds
      summary: Get aggregeted count of operations
      responses:
        200:
          description: "Success"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/agg_item'
  /blocks/count/agg:
    get:
      tags:
        - Services
      parameters:
        - name: by
          in: query
          required: true
          schema:
            type: string
            enum: [hour, day, week, month]
        - name: from
          in: query
          required: false
          schema:
            type: number
          description: timestamp in seconds
        - name: to
          in: query
          required: false
          schema:
            type: number
          description: timestamp in seconds
      summary: Get aggregeted count of blocks
      responses:
        200:
          description: "Success"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/agg_item'
  /blocks/delay/agg:
    get:
      tags:
        - Services
      parameters:
        - name: by
          in: query
          required: true
          schema:
            type: string
            enum: [hour, day, week, month]
        - name: from
          in: query
          required: false
          schema:
            type: number
          description: timestamp in seconds
        - name: to
          in: query
          required: false
          schema:
            type: number
          description: timestamp in seconds
      summary: Get aggregeted average block delay
      responses:
        200:
          description: "Success"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/agg_item'
  /blocks/validators/uniq/agg:
    get:
      tags:
        - Services
      parameters:
        - name: by
          in: query
          required: true
          schema:
            type: string
            enum: [hour, day, week, month]
        - name: from
          in: query
          required: false
          schema:
            type: number
          description: timestamp in seconds
        - name: to
          in: query
          required: false
          schema:
            type: number
          description: timestamp in seconds
      summary: Get aggregeted number of unique validators that signed the blocks
      responses:
        200:
          description: "Success"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/agg_item'
  /delegations/volume/agg:
    get:
      tags:
        - Services
      parameters:
        - name: by
          in: query
          required: true
          schema:
            type: string
            enum: [hour, day, week, month]
        - name: from
          in: query
          required: false
          schema:
            type: number
          description: timestamp in seconds
        - name: to
          in: query
          required: false
          schema:
            type: number
          description: timestamp in seconds
      summary: Get aggregeted delegations volume
      responses:
        200:
          description: "Success"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/agg_item'
  /undelegations/volume/agg:
    get:
      tags:
        - Services
      parameters:
        - name: by
          in: query
          required: true
          schema:
            type: string
            enum: [hour, day, week, month]
        - name: from
          in: query
          required: false
          schema:
            type: number
          description: timestamp in seconds
        - name: to
          in: query
          required: false
          schema:
            type: number
          description: timestamp in seconds
      summary: Get aggregeted undelegations volume
      responses:
        200:
          description: "Success"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/agg_item'
  /network/stats:
    get:
      tags:
        - Services
      parameters:
        - name: to
          in: query
          required: false
          schema:
            type: number
          description: timestamp in seconds
      summary: Get network stats
      responses:
        200:
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                properties:
                  total_staking_balance:
                    type: array
                    items:
                      type: number
                  number_delegators:
                    type: array
                    items:
                      type: number
                  number_multi_delegators:
                    type: array
                    items:
                      type: number
                  transfer_volume:
                    type: array
                    items:
                      type: number
                  fee_volume:
                    type: array
                    items:
                      type: number
                  highest_fee:
                    type: array
                    items:
                      type: number
                  undelegation_volume:
                    type: array
                    items:
                      type: number
                  block_delay:
                    type: array
                    items:
                      type: number
                  total_accounts:
                    type: array
                    items:
                      type: number
                  total_whale_accounts:
                    type: array
                    items:
                      type: number
                  total_small_accounts:
                    type: array
                    items:
                      type: number
                  total_jailers:
                    type: array
                    items:
                      type: number
  /staking/pie:
    get:
      tags:
        - Services
      summary: Get top 20 staking shares
      responses:
        200:
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: number
                  parts:
                    type: array
                    items:
                      type: object
                      properties:
                        title:
                          type: string
                        label:
                          type: string
                        value:
                          type: number
                example: {total: 4321, parts: [{title: everstake, value: 123}]}
  /proposals:
    get:
      tags:
        - Services
      parameters:
        - name: id
          in: query
          required: false
          schema:
            type: number
        - name: limit
          in: query
          required: false
          schema:
            type: number
        - name: offset
          in: query
          required: false
          schema:
            type: number
      summary: Get proposals
      responses:
        200:
          description: "Success"
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: number
                    proposer:
                      type: string
                    tx_hash:
                      type: string
                    title:
                      type: string
                    description:
                      type: string
                    status:
                      type: string
                    votes_yes:
                      type: number
                    votes_abstain:
                      type: number
                    votes_no:
                      type: number
                    votes_no_with_veto:
                      type: number
                    submit_time:
                      type: number
                    deposit_end_time:
                      type: number
                    total_deposits:
                      type: number
                    voting_start_time:
                      type: number
                    voting_end_time:
                      type: number
                    pro_voters:
                      type: number
                    pro_participation_rate:
                      type: number
                    turnout:
                      type: number
                    pro_activity:
                      $ref: '#/components/schemas/agg_item'

components:
  schemas:
    agg_item:
      type: array
      items:
        type: object
        properties:
          time:
            type: number
          value:
            type: number
      example:
        [{time: 1591258057, value: "32.32"}, {time: 1591258052, value: "5"}]
